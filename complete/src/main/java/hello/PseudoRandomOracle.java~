/***********************************************************************
* FILENAME :        PseudoRandomOracle.java             
*
* DESCRIPTION :
*       Implement a (pseudo) random oracle for the IND-CPA ciphertext distinguishing game
*
* PUBLIC FUNCTIONS :
*       
*       
*
* NOTES : 
*       It is a standard approach to model modern ciphers as pseudo random functions (PRF).
*       A PRF is sematically secure if knowledge of a ciphertext does not reveal any information about 
*       about the key or the plaintext input to a **polynomial time** adversary (cf. contrast with "perfect 
*       secrecy"). 
*       An equivalent definition of sematic security is ciphertext indistinguibility under chosen plaintext attack
*       (IND-CPA). This definition is based on a distinguishing game where a polynomial time adversary chooses
*       two distinct messages, m_1 and m_2, and submits them to an encrypting oracle that implements the PRF.
*       The orale then randomly picks one of the two messages, encrypts them with the PRF, and returns this 
*       ciphertext to the adversay. The PRF is sematically secure if the likehood that the adversary can 
*       correctly guess the corresponding plaitext to the ci[phertext is no greater than 1/2 plus some 
*       "negligible" advantage
*
*        Implementation details: 
*        1) The chosen PRF is AES-128
*        2) Input plaintexts are each 16 bytes long which is equal to the AES block size
*        3) Since each input is sized to the AES block, we do not care about a specific mode of operation for AES
*        4) The two plaintexts are passed in to the rest endpoint through the following 
*           URL and parameter as a 64 character concatenated hex string
*        http://pseudorandomoracle.cfapps.io/oracle?plaintexts=02fa10    
*        5) The first 32 characters in the above paramater value correspond to the first 16 byte
*        plaintext messsage and the second 32 characters correspond to the second 16 byte plaitext message 
*        sent my the adversary 
*       
* 
* AUTHOR :    Rohit Khera        START DATE :    Dec. 6 2015
*
* CHANGES :
*  
* REF NO  VERSION DATE    WHO     DETAIL
* 
*
*/


package hello;

import java.security.MessageDigest;
import java.util.Arrays;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import javax.crypto.spec.IvParameterSpec;
 
import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
 
import java.security.NoSuchAlgorithmException;
import java.security.InvalidKeyException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import java.security.NoSuchProviderException;




public class PseudoRandomOracle {





    private final long id;
    private final String content;

    public PseudoRandomOracle(long id, String content) {
        this.id = id;
        this.content = content;
    }

    public long getId() {
        return id;
    }

    public String getContent() {
        return content;
    }

}
